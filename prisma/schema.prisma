// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String?
  username String? @unique @db.VarChar(255)
  receivedDonations Donations[] @relation("ReceivedDonations")
  donations Donations[] @relation("Donations")
  createdAt DateTime @default(now())
  profileId Int? 
  profile Profile?
  bankCardId Int?
  bankCard BankCard? @relation("BankCard")
  updatedAt DateTime @default(now()) @updatedAt
}
model Donations {
  id Int @id @default(autoincrement())
  amount Int
  specialMessage String?
  socialURLOrBuyMeACoffee String?
  donorId Int
  donor User @relation("Donations", fields: [donorId], references: [id])
  user User @relation("ReceivedDonations",fields: [recipientId], references: [id])
  recipientId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
model BankCard {
  id Int @id @default(autoincrement())
  country String
  firstName String
  lastName String
  cardNumber String 
  expiryDate DateTime
  userId Int @unique
  user User @relation("BankCard", fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Profile {
  id Int @id @default(autoincrement())
  name String
  about String?
  avatarImage String?
  socialMediaURL String?
  backgroundImage String?
  successMessage String
  userId Int @unique
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}